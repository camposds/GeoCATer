# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GeoCAT_AnalysisDockWidget
                                 A QGIS plugin
 A QGIS plugin to perform EOO (Extent of Occurrence) and AOO (Area of Occupancy) analysis based on GeoCAT principles
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-09-29
        git sha              : $Format:%H$
        copyright            : (C) 2024 by Diego Sousa Campos
        email                : camposds1@yahoo.com.br
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
<<<<<<< HEAD

=======
>>>>>>> 5b69d0c (Primeiro commit - adicionando plugin GeoCATer)
from qgis.PyQt import QtGui, QtWidgets, uic
from qgis.PyQt.QtCore import pyqtSignal

FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'geocat_analysis_dockwidget_base.ui'))


class GeoCAT_AnalysisDockWidget(QtWidgets.QDockWidget, FORM_CLASS):
<<<<<<< HEAD

    closingPlugin = pyqtSignal()
=======
    # Sinais
    closingPlugin = pyqtSignal()
    cellSizeChanged = pyqtSignal(int)  # Novo sinal para mudança no tamanho da célula
>>>>>>> 5b69d0c (Primeiro commit - adicionando plugin GeoCATer)

    def __init__(self, parent=None):
        """Constructor."""
        super(GeoCAT_AnalysisDockWidget, self).__init__(parent)
<<<<<<< HEAD
        # Set up the user interface from Designer.
        # After setupUI you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://doc.qt.io/qt-5/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

    def closeEvent(self, event):
        self.closingPlugin.emit()
        event.accept()
=======
        self.setupUi(self)

        # Conectar eventos de widgets
        self.cellSizeInput.textChanged.connect(self.on_cell_size_changed)  # Exemplo para monitorar mudanças de tamanho

    def on_cell_size_changed(self):
        """Emite o sinal quando o tamanho da célula muda."""
        try:
            cell_size = int(self.cellSizeInput.text())  # Certifique-se de que o campo é válido
            self.cellSizeChanged.emit(cell_size)
        except ValueError:
            # Caso o valor inserido não seja um número válido
            self.cellSizeChanged.emit(2000)  # Valor padrão

    def closeEvent(self, event):
        """Emite o sinal quando o dock widget é fechado."""
        self.closingPlugin.emit()
        event.accept()

>>>>>>> 5b69d0c (Primeiro commit - adicionando plugin GeoCATer)
